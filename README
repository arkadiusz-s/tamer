TAMER
=====

   Tamer is a lightweight version of the Tame event-driven programming
package.  Included is a preprocessor that compiles Tame abstractions into
conventional C++ code, the Tamer libraries for event-driven programming,
and several examples, including a working port of the Knot web server
distributed with the Capriccio threading package.

   Installation is standard; run "./configure", supplying any options, then
"make install".  Documentation is supplied in manual page format, and as
doxygen comments in the user-facing header files in "tamer/".  After "make
install", try "man 3 tamer"; before installation, try "nroff -man
doc/tamer.3 | less" .


Why Tamer?
----------

   For historical reasons, the Tame package distributed as part of SFSlite
follows SFS conventions, and requires a wide variety of less than
documented general-purpose classes, including strings, string buffers,
vectors, hash tables, linked lists, and reference counts.  Better, or at
least more standard, versions of many of these classes are available as
part of the C++ standard library and the Boost libraries.  Additionally,
the Tame abstractions are layered on top of SFSlite's existing "wrap"
callbacks, adding complexity and minor overhead.

   Tamer, in contrast, is a freestanding port of the basic Tame
abstractions to a standard C++ environment.  Although currently less
powerful than Tame and SFSlite -- for example, Tamer code can block on disk
I/O, a problem SFSlite can solve with RPCs, and SFSlite ships with an
asynchronous DNS resolver -- Tamer is much smaller and lighter weight.  It
was also designed to be easier to use.

   If your main concern is code readability, try Tamer.  If you really can
never block, or would benefit from built-in RPC support, try Tame.


License and Non-Warranty
------------------------

   Tamer is distributed under the GNU Public License, Version 2.  See the
file "LICENSE".

   The tamer preprocessor transforms code using the Tamer extensions into
conventional C++.  We explicitly state that preprocessor output does not
add license requirements.  That is, the output of the tamer preprocessor
need not be distributed under the GPL, and may use whatever license applies
to the original code.  However, the Tamer library, including header files
and other source files in the tamer/ subdirectory, is licensed under the
GPL.  Since most Tamer source files will make integral use of the Tamer
library, the effect is that most Tamer source files will generally need to
be distributed under the GPL.


Bugs and Contributing
---------------------

   We are happy to accept bug reports, patches, and contributions of code,
for example to improve Tamer's support for nonblocking disk I/O.  Send them
to Eddie Kohler at the address below.


Authors
-------

Eddie Kohler <kohler@cs.ucla.edu>
http://www.cs.ucla.edu/~kohler/

Maxwell Krohn <krohn@mit.edu>
http://www.okws.org/
Especially for the original version of the tamer preprocessor and
consultation on the name of the fileio:: namespace.
