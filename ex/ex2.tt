// -*- mode: c++ -*-
#include <stdio.h>
#include <unistd.h>
#include <fcntl.h>
#include <signal.h>
#include <tamer/tamer.hh>
#include <tamer/fd.hh>

int n;

tamed void read_sucka(tamer::fd &f) {
    tvars {
	int ret(-1);
	char buf[40];
	size_t amt(0);
    }
    n++;
    twait {
	f.read(buf, 40, amt, tamer::add_timeout_sec(2, make_event(ret)));
    }
    fprintf(stderr, "got %d: %d: %.*s\n", ret, amt, amt, buf);
    n--;
}

tamed void time_sucka() {
    n++;
    twait { tamer::at_delay_sec(5, make_event()); }
    n--;
}

tamed void close_sucka(tamer::fd &f) {
    n++;
    twait { tamer::at_delay_msec(500, make_event()); }
    f.close();
    n--;
}


int main(int, char **) {
    tamer::initialize();
    tamer::fd::make_nonblocking(0);
    tamer::fd mystdin(0);
    read_sucka(mystdin);
    time_sucka();
    close_sucka(mystdin);
    while (n > 0)
	tamer::once();
}
