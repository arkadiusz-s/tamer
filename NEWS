Tamer NEWS

Version 1.2.0   13.Jun.2007

* Eliminate event cancellation; after experience, it was a bad idea.  Now,
  when the last reference to an active event is dropped, the event
  automatically triggers (but this is considered an error and an error
  message is printed).  This simplifies a lot of code.  (Max disagrees, and
  would prefer a dereferenced event to silently disappear; we will see.)

* event<T*>::at_trigger() replaces event<T*>::at_cancel() and
  event<T*>::at_complete().  tamer::unbind() replaces tamer::ignore_slot().
  event<T*>::bind_all() replaces event<T*>::make_unbound().


Version 1.1.0   5.Jun.2007

* Remove tamer::fileio and tamer::at_fd_close in favor of a tamer::fd
  object with a better interface.

* Language improvements: Add "twait volatile { }" blocks.  Add name
  mangling to closure names, allowing tamed overloaded functions.  Allow
  tvars{} variable initialization with "type var = value".

* Add support for a libevent back end.  When this back end is used, Tamer
  functions like tamer::at_fd_read() compile into libevent "struct event"s,
  and the Tamer driver is a wrapper for libevent's driver.  To use the
  Tamer native driver, set the TAMER_NOLIBEVENT environment variable.

* Add tamer::fun_event(), which wraps a function or function object in an
  event.

* Add event<T*>::canceler() and event<T*>::at_complete().

* Bug fixes in tamer::mutex, tamer::at_time, tamer::with_timeout.

* Include #defines for version numbers.

* "make clean" fixes from Henrik Nordstrom.


Version 1.0.0   22.May.2007

* Initial release.
